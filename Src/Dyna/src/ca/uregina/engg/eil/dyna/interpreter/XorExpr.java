/* Generated By:JJTree: Do not edit this line. XorExpr.java */

/**
 * AST Node for xor (^) expression
 *
 * @author Robert Harrison
 * 
 * Energy Informatics Laboratory
 * Faculty of Engineering
 * University of Regina
 * http://www.uregina.ca/engg
 */

package ca.uregina.engg.eil.dyna.interpreter;

import edu.stanford.smi.protege.model.KnowledgeBase;
import java.io.PrintStream;

public class XorExpr extends SimpleNode {
  public XorExpr(int id) {
    super(id);
  }

  public XorExpr(TBLParser p, int id) {
    super(p, id);
  }

  public void interpret() throws ParseException
  {
     jjtGetChild(0).interpret();
     jjtGetChild(1).interpret();
     
     Interpreter interp = InterpreterManager.getInterpreterManager().getInterpreter();        
     Stack stack = Stack.getStack();
     
     boolean rhs = ((Boolean)stack.pop()).booleanValue();
     boolean lhs = ((Boolean)stack.pop()).booleanValue();
         
     stack.push(new Boolean(lhs ^ rhs));                          
  }
  
}
