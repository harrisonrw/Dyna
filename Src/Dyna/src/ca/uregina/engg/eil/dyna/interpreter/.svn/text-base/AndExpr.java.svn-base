/* Generated By:JJTree: Do not edit this line. AndExpr.java */

/**
 * AST Node for "and" expression
 *
 * @author Robert Harrison
 * 
 * Energy Informatics Laboratory
 * Faculty of Engineering
 * University of Regina
 * http://www.uregina.ca/engg
 */

package ca.uregina.engg.eil.dyna.interpreter;

import edu.stanford.smi.protege.model.KnowledgeBase;
import java.io.PrintStream;

public class AndExpr extends SimpleNode {
  public AndExpr(int id) {
    super(id);
  }

  public AndExpr(TBLParser p, int id) {
    super(p, id);
  }

  public void interpret() throws ParseException
  {
     jjtGetChild(0).interpret();
     
     Interpreter interp = InterpreterManager.getInterpreterManager().getInterpreter();     
     Stack stack = Stack.getStack();
     
     // Test first expression.
     if (!((Boolean) stack.peek()).booleanValue())
     {        
         // First expression is false.
         stack.pop();
         stack.push(new Boolean(false));               
     }
     else
     {
         // First expression was true.
     
         jjtGetChild(1).interpret();
         
         Boolean value = ((Boolean)stack.pop()).booleanValue();
         stack.push(value);
     }          
  }
  
}
